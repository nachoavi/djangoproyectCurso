# En este archivo se encuentran todas las configuraciones del proyecto. Aquí defines la base de datos que se utilizará, configuraciones de seguridad, configuraciones de aplicaciones, ajustes de internacionalización y más.
"""
Django settings for cursoFazt project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5%fvi*v)^d)0=4tk6q@r0(uq7xdiy+n2^z&z+qm8f&ukeolhf@'

# SECURITY WARNING: don't run with debug turned on in production! 
#Esta opción controla si el modo de depuración está activado. Cuando está en True, se mostrarán mensajes detallados de error en el navegador cuando ocurra un error en tu aplicación. En producción, debería establecerse en False por razones de seguridad.
DEBUG = True

#Aquí debes especificar una lista de nombres de host que se consideran válidos para tu sitio web. Esto ayuda a prevenir ataques de suplantación de host (host spoofing).
ALLOWED_HOSTS = []


# Application definition
# Esta es una lista de todas las aplicaciones instaladas en tu proyecto Django. Cada aplicación puede tener su propio conjunto de modelos, vistas, plantillas y otros componentes.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myFirstApp'
]

#Aquí se especifica una lista de middleware que se ejecuta en cada solicitud antes de llegar a la vista. El middleware puede realizar diversas tareas como autenticación, compresión de contenido, manipulación de encabezados, etc.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cursoFazt.urls'


#Aquí se configuran las opciones relacionadas con la gestión de plantillas (templates) en tu proyecto. Puedes especificar los directorios donde se encuentran tus plantillas y cómo deben ser procesadas.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cursoFazt.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

#Esta opción configura la base de datos que utilizará tu proyecto. Puedes configurar diferentes bases de datos para desarrollo y producción. Las opciones incluyen configuraciones para bases de datos SQLite, PostgreSQL, MySQL, entre otros.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

#Define una lista de validadores de contraseñas que se aplican cuando los usuarios crean o cambian sus contraseñas. Esto ayuda a asegurar que las contraseñas sean lo suficientemente fuertes.
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

#Estas opciones definen la URL base y la ruta en el sistema de archivos donde se almacenan los archivos estáticos (como hojas de estilo CSS, imágenes y archivos JavaScript) para tu proyecto.
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
